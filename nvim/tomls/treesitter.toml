[[plugins]]
repo = 'nvim-treesitter/nvim-treesitter'
lua_post_source = '''
  require 'nvim-treesitter.configs'.setup {
    ensure_installed = { "lua", "go", "python", "bash", "typescript", "yaml", "toml", "json", "vim", "hcl", "rust" },
    sync_install = false,
    auto_install = true,
    highlight = {
      enable = true,
      -- filesize で現状そんなに問題がないので一旦コメントアウトして様子を見る。問題なかったら完全に消す。
      -- disable = function(_, buf)
      --   local max_filesize = 100 * 1024 -- 100 KB
      --   local ok, stats = pcall(vim.loop.fs_stat, vim.api.nvim_buf_get_name(buf))
      --   if ok and stats and stats.size > max_filesize then
      --     return true
      --   end
      -- end,
      additional_vim_regex_highlighting = false,
    },
    indent = {
      enable = true,
    }
  }
'''

[[plugins]]
repo = 'm-demare/hlargs.nvim'
depends = ['nvim-treesitter']
lua_post_source = '''
  require('hlargs').setup()
'''

[[plugins]]
repo = 'nvim-treesitter/nvim-treesitter-context'
depends = ['nvim-treesitter']
hook_add = '''
  hi TreesitterContextBottom gui=underline guisp=Grey
'''
lua_post_source = '''
  require 'treesitter-context'.setup {
    patterns = {
      default = {
        'class',
        'function',
        'method',
        'interface',
        'struct',
      },
      haskell = {
        'adt'
      },
      rust = {
        'impl_item',

      },
      terraform = {
        'block',
        'object_elem',
        'attribute',
      },
      markdown = {
        'section',
      },
      json = {
        'pair',
      },
      typescript = {
        'export_statement',
      },
      yaml = {
        'block_mapping_pair',
      },
    },
  }
'''
